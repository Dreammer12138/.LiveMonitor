#!/usr/bin/python3

"""
DD Monitor —— a CLI script that record live stream automatically

Params:
+ -r/--room :   Live room id
+ -o/--outpath: Video save path
"""

import asyncio
import getopt, sys, datetime, os, time
from bilibili_api import live, sync
import aiohttp
import requests

opts, args = getopt.getopt(sys.argv[1:], "r:o:", ["room=", "outpath="])

#参数检测
try:
    for opt, val in opts :
        if opt in ("-r", "--room") :
            room = val
            print('[DD Monitor] Start Room {}'.format(room))
        if opt in ("-o", "--outpath") :
            path = os.path.abspath(val)
            print('[DD Monitor] Output Directory {}'.format(path))
except getopt.GetoptError as e:
    sys.exit()

async def connectCheck(room):
    r = live.LiveRoom(room)
    return (await r.get_room_play_info())['live_status']

def formatByte(Byte):
    if Byte >= 1073741824:
        res = '{}G'.format(round(Byte/1073741824, 2))
    elif Byte >= 1048576:
        res = '{}M'.format(round(Byte/1048576, 2))
    elif Byte >= 1024:
        res = '{}K'.format(round(Byte/1024, 2))
    else:
        res = '{}B'.format(round(Byte, 2))
    return res

async def recordLive(room, path):
    r = live.LiveRoom(room)
    streamInfo = await r.get_room_play_url()
    url = streamInfo['durl'][0]['url']

    title = (await r.get_room_info())['room_info']['title']

    filename = '{}_{}'.format(datetime.datetime.now().strftime('%Y-%m-%d'), title)

    response = requests.get(url, headers={"User-Agent": "Mozilla/5.0", "Referer": "https://www.bilibili.com/"}, stream=True)

    with open('{}/{}.flv'.format(path, filename), 'wb') as f:
        byteCount = 0
        now = datetime.datetime.now()
        nb = byteCount
        speed = '0B/s'
        for data in response.iter_content(chunk_size=1024):
            byteCount += len(data)
            stdout = formatByte(byteCount)

            interval = datetime.datetime.now()
            if (interval - now).seconds >= 1:
                now = interval
                flow = byteCount - nb
                speed = '{}/s'.format(formatByte(flow))
                nb = byteCount
            print(
                '[DD Monitor] Recorded {:>8s} @ {:10s}'.format(
                    stdout,
                    speed
                ),
                end="\r",
                file=sys.stdout,
                flush=True
            )
            f.write(data)
            f.flush()
    print('[DD Monitor] Save to {}/{}.flv'.format(path, filename))
    return

while True:
    try:
        liveStatus = sync(connectCheck(room))
        if liveStatus == 1:
            print('[DD Monitor] {}'.format('Live Start'))
            try:
                sync(recordLive(room, path))
                print('[DD Monitor] Live Closed')
            except KeyboardInterrupt:
                print('\r\033[K[DD Monitor] Error You Stoped Recording')
        time.sleep(120)
    except KeyboardInterrupt:
        print('\r[DD Monitor] Stop Monitor')
        break
